%{module: C3.Facts.Dump,
  version: 1,
  count: 27}
{C3, :is_a, :module}
{C3, :name, "C3"}
{C3, :path, "c3.facts"}
{C3, :symbol, C3.+}
{C3, :symbol, C3.-}
{C3, :symbol, C3.*}
{C3, :symbol, C3./}
{C3, :symbol, C3.break}
{C3, :symbol, C3.first}
{C3.+, :cfn, cfn :tag "tag_add" (:tag, :tag, :&result)}
{C3.+, :is_a, :operator}
{C3.+, :operator_precedence, 1}
{C3.+, :operator_associativity, :left}
{C3.-, :cfn, cfn :tag "tag_sub" (:tag, :tag, :&result)}
{C3.-, :is_a, :operator}
{C3.-, :operator_precedence, 1}
{C3.-, :operator_associativity, :left}
{C3.*, :cfn, cfn :tag "tag_mul" (:tag, :tag, :&result)}
{C3.*, :is_a, :operator}
{C3.*, :operator_precedence, 2}
{C3.*, :operator_associativity, :left}
{C3./, :cfn, cfn :tag "tag_div" (:tag, :tag, :&result)}
{C3./, :is_a, :operator}
{C3./, :operator_precedence, 2}
{C3./, :operator_associativity, :left}
{C3.break, :cfn, cfn :void "c3_break" ()}
{C3.first, :fn, fn {
 ((a | _b)) { a }
 ({a, _b}) { a }
 ({a, _b, _c}) { a }
 ({a, _b, _c, _d}) { a }
}}
